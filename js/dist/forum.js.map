{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;;;;;AAA6C;AACA;AAE7C,iEAAe,CACb,IAAIA,sEAAY,CAACC,kEAAI,CAAC,CAAC;AAAA,CACpBE,SAAS,CAAU,cAAc,CAAC,CACtC;;;;;;;;;;;;;;;;;;;;;;;ACNkC;AACW;AACO;AACM;AAK5C,SAASK,oBAAoBA,CAAA,EAAG;EAC7CH,4DAAM,CAACE,wEAAY,EAAE,oBAAoB,EAAE,UAAUE,KAAiC,EAAEC,IAAU,EAAE;IAClGA,IAAI,CAACC,YAAY,CAAC,CAAC,IACjBF,KAAK,CAACG,GAAG,CACP,SAAS,EACTC,CAAA,CAACP,wEAAM;MACLQ,IAAI,EAAC,uBAAuB;MAC5BC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACb,IAAI,CAACC,OAAO,CAACZ,kEAAc,CAACc,KAAK,CAAC,wDAAwD,CAAW,CAAC,EAAE;QAExGd,+DACU,CAAC;UACPgB,GAAG,EAAKhB,6DAAS,CAACD,SAAS,CAAC,QAAQ,CAAC,eAAUO,IAAI,CAACY,EAAE,CAAC,CAAC,eAAY;UACpEC,MAAM,EAAE;QACV,CAAC,CAAC,CACDC,IAAI,CAAC;UAAA,OAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAAA,EAAC;MACzC;IAAE,GAEDvB,kEAAc,CAACc,KAAK,CAAC,kDAAkD,CAClE,CACV,CAAC;EACL,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;;;;AC9BmC;AACiC;AAEvB;AAE7Cd,oEAAgB,CAACQ,GAAG,CAAC,eAAe,EAAE,YAAM;EAC1CJ,2EAAoB,CAAC,CAAC;AACxB,CAAC,CAAC;;;;;;;;;;;ACPF;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@fof/anti-spam/./src/forum/extend.ts","webpack://@fof/anti-spam/./src/forum/extenders/addSpamblockControls.tsx","webpack://@fof/anti-spam/./src/forum/index.ts","webpack://@fof/anti-spam/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/anti-spam/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/anti-spam/external root \"flarum.core.compat['common/extenders']\"","webpack://@fof/anti-spam/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/anti-spam/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/anti-spam/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@fof/anti-spam/webpack/bootstrap","webpack://@fof/anti-spam/webpack/runtime/compat get default export","webpack://@fof/anti-spam/webpack/runtime/define property getters","webpack://@fof/anti-spam/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/anti-spam/webpack/runtime/make namespace object","webpack://@fof/anti-spam/./forum.ts"],"sourcesContent":["import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\n\nexport default [\n  new Extend.Model(User) //\n    .attribute<boolean>('canSpamblock'),\n];\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Button from 'flarum/common/components/Button';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\n\nexport default function addSpamblockControls() {\n  extend(UserControls, 'moderationControls', function (items: ItemList<Mithril.Children>, user: User) {\n    user.canSpamblock() &&\n      items.add(\n        'spammer',\n        <Button\n          icon=\"fas fa-pastafarianism\"\n          onclick={() => {\n            if (!confirm(app.translator.trans('fof-anti-spam.forum.user_controls.spammer_confirmation') as string)) return;\n\n            app\n              .request({\n                url: `${app.forum.attribute('apiUrl')}/users/${user.id()}/spamblock`,\n                method: 'POST',\n              })\n              .then(() => window.location.reload());\n          }}\n        >\n          {app.translator.trans('fof-anti-spam.forum.user_controls.spammer_button')}\n        </Button>\n      );\n  });\n}\n","import app from 'flarum/forum/app';\nimport addSpamblockControls from './extenders/addSpamblockControls';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('fof/anti-spam', () => {\n  addSpamblockControls();\n});\n","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/extenders'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/utils/UserControls'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/forum';\n"],"names":["Extend","User","Model","attribute","app","extend","Button","UserControls","addSpamblockControls","items","user","canSpamblock","add","m","icon","onclick","confirm","translator","trans","request","url","forum","id","method","then","window","location","reload","default","initializers"],"sourceRoot":""}